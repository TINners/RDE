from django.db import models

class Supervisor(models.Model):
    surname = models.CharField(max_length = 30)
    name = models.CharField(max_length = 30)
    email = models.EmailField(unique = True)
    password = models.CharField(max_length = 30)

class Bachelor(models.Model):
    owner = models.CharField(max_length = 30)
    authorAffiliationowner = models.CharField(max_length = 10)
    authorActive = models.BooleanField()
    authorStatus = models.CharField(max_length = 30)
    authorName = models.CharField(max_length = 30)
    authorSurname = models.CharField(max_length = 30)
    authorEmail = models.EmailField()
    authorAffiliationId = models.CharField(max_length = 60)
    titlePL = models.TextField()
    titleEN = models.TextField()
    supervisor = models.ForeignKey('Supervisor')
    certifyingUnit = models.CharField(max_length = 60)
    affiliationUnit = models.CharField(max_length = 60)
    language = models.CharField(max_length = 10)
    status = models.CharField(max_length = 15)
    mark = models.CharField(max_length = 20)
    honored = models.CharField(max_length = 20)
    issueDate = models.DateField()
    abstractPL = models.TextField()
    abstractEN = models.TextField()
    keywordsPL = models.TextField()
    keywordsEN = models.TextField()
    
class TemplateBachelor(models.Model):
    owner = models.CharField(max_length = 30)
    affiliationowner = models.CharField(max_length = 10)
    author_active = models.BooleanField()
    author_status = models.CharField(max_length = 30)
    author_affiliation_id = models.CharField(max_length = 60)
    supervisor = models.OneToOneField(Supervisor, primary_key = True)
    certifyingUnit = models.CharField(max_length = 60)
    affiliationUnit = models.CharField(max_length = 60)
    language = models.CharField(max_length = 10)
    status = models.CharField(max_length = 15)
    mark = models.CharField(max_length = 20)
    honored = models.CharField(max_length = 20)
    
class Master(models.Model):
    owner = models.CharField(max_length = 30)
    authorAffiliationowner = models.CharField(max_length = 10)
    authorActive = models.BooleanField()
    authorStatus = models.CharField(max_length = 30)
    authorName = models.CharField(max_length = 30)
    authorSurname = models.CharField(max_length = 30)
    authorEmail = models.EmailField()
    authorAffiliationId = models.CharField(max_length = 60)
    titlePL = models.TextField()
    titleEN = models.TextField()
    supervisor = models.ForeignKey('Supervisor')
    certifyingUnit = models.CharField(max_length = 60)
    affiliationUnit = models.CharField(max_length = 60)
    language = models.CharField(max_length = 10)
    status = models.CharField(max_length = 15)
    mark = models.CharField(max_length = 20)
    honored = models.CharField(max_length = 20)
    issueDate = models.DateField()
    abstractPL = models.TextField()
    abstractEN = models.TextField()
    keywordsPL = models.TextField()
    keywordsEN = models.TextField()
    
class TemplateMaster(models.Model):
    owner = models.CharField(max_length = 30)
    affiliationowner = models.CharField(max_length = 10)
    author_active = models.BooleanField()
    author_status = models.CharField(max_length = 30)
    author_affiliation_id = models.CharField(max_length = 60)
    supervisor = models.OneToOneField(Supervisor, primary_key = True)
    certifyingUnit = models.CharField(max_length = 60)
    affiliationUnit = models.CharField(max_length = 60)
    language = models.CharField(max_length = 10)
    status = models.CharField(max_length = 15)
    mark = models.CharField(max_length = 20)
    honored = models.CharField(max_length = 20)